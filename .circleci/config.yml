version: 2

references:
    accept_licenses : &accept_licenses
        run:
            name: Accept licenses
            command: yes | sdkmanager --licenses || true
    workspace: &workspace
                   ~/work

    android_config: &android_config
        working_directory: *workspace
        docker:
            - image: cimg/android:2022.09.1

jobs:
  build:
    working_directory: ~/work
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run: ./gradlew check jacocoTestReport javadoc jar
      - save_cache:
          paths:
            - ~/.gradle
            - ~/work/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_artifacts:
          path: build/docs
          destination: docs
      - store_artifacts:
          path: build/libs
          destination: libs
      - store_test_results:
          path: build/test-results
  check-android-api-level:
    <<: *android_config
    steps:
      - checkout
      - *accept_licenses
      - run:
          name: Android Lint
          command: ./gradlew -Pandroid lintDebug --max-workers=1
      - store_artifacts:
          path: build/reports/lint-results-debug.html
          destination: lint-results.html
  package:
    working_directory: ~/work
    docker:
      - image: circleci/openjdk:latest
    steps:
      - checkout
      - restore_cache:
          key: m2-{{ checksum "pom.xml" }}
      - run: mvn package
      - save_cache:
          paths:
            - ~/.m2
          key: m2-{{ checksum "pom.xml" }}
      - store_artifacts:
          path: target/apidocs
          destination: apidocs
      - store_artifacts:
          path: target/libs
          destination: libs
      - store_test_results:
          path: target/surefire-reports
workflows:
  version: 2
  build_and_package:
    jobs:
      - build
      - check-android-api-level
      - package
